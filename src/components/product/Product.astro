---
import { Icon } from "astro-icon/components";
---

<div class="w-full max-w-7xl mx-auto p-6">
    <!-- Encabezado -->
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800 dark:text-white">
            Productos
        </h1>
        <button
            id="btn-nuevo"
            class="px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 flex items-center gap-2"
        >
            <Icon name="form/plusproduct" size={18} /> Nuevo producto
        </button>
    </div>

    <!-- Tabla en desktop / tarjetas en móvil -->
    <div class="overflow-x-auto bg-white dark:bg-neutral-900 shadow rounded-lg">
        <table
            class="w-full text-sm text-left text-gray-600 dark:text-gray-300 hidden md:table"
        >
            <thead
                class="bg-gray-100 dark:bg-neutral-800 text-gray-700 dark:text-gray-200 text-xs uppercase"
            >
                <tr>
                    <th class="px-4 py-3">ID</th>
                    <th class="px-4 py-3">Código</th>
                    <th class="px-4 py-3">Nombre</th>
                    <th class="px-4 py-3">Categoría</th>
                    <th class="px-4 py-3">Compra</th>
                    <th class="px-4 py-3">Venta</th>
                    <th class="px-4 py-3">Stock</th>
                    <th class="px-4 py-3">Unidad</th>
                    <th class="px-4 py-3 text-center">Acciones</th>
                </tr>
            </thead>
            <tbody
                id="productos-lista"
                class="divide-y divide-gray-200 dark:divide-neutral-700"
            >
                <!-- JS insertará filas -->
            </tbody>
        </table>

        <!-- Vista móvil -->
        <div
            id="productos-lista-movil"
            class="md:hidden flex flex-col gap-4 p-4"
        >
            <!-- JS insertará tarjetas -->
        </div>
    </div>
</div>

<!-- Modal de formulario -->
<div
    id="modal-producto"
    class="hidden fixed inset-0 flex items-center justify-center bg-black/40 backdrop-blur-sm z-50"
>
    <div
        class="bg-white dark:bg-neutral-900 p-6 rounded-2xl shadow-xl w-full max-w-lg relative"
    >
        <button
            id="cerrar-modal"
            class="absolute top-3 right-3 bg-red-500 hover:bg-red-600 text-white rounded-full p-2"
        >
            ✕
        </button>
        <h2 class="text-xl font-bold mb-4 text-gray-800 dark:text-white">
            Producto
        </h2>
        <form id="form-producto" class="space-y-4">
            <input type="hidden" id="producto-id" />

            <div>
                <label class="block text-sm font-medium">Código de barras</label
                >
                <input
                    type="text"
                    id="producto-codigo"
                    class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                />
            </div>

            <div>
                <label class="block text-sm font-medium">Nombre</label>
                <input
                    type="text"
                    id="producto-nombre"
                    required
                    class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                />
            </div>

            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium"
                        >Precio compra</label
                    >
                    <input
                        type="number"
                        step="0.01"
                        id="producto-precio-compra"
                        required
                        class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                    />
                </div>
                <div>
                    <label class="block text-sm font-medium">Precio venta</label
                    >
                    <input
                        type="number"
                        step="0.01"
                        id="producto-precio-venta"
                        required
                        class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                    />
                </div>
            </div>

            <div class="grid grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium">Stock actual</label
                    >
                    <input
                        type="number"
                        id="producto-stock-actual"
                        required
                        class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                    />
                </div>
                <div>
                    <label class="block text-sm font-medium">Stock mínimo</label
                    >
                    <input
                        type="number"
                        id="producto-stock-minimo"
                        required
                        class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                    />
                </div>
            </div>

            <div>
                <label class="block text-sm font-medium">Unidad de medida</label
                >
                <input
                    type="text"
                    id="producto-unidad"
                    required
                    class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                />
            </div>

            <div>
                <label class="block text-sm font-medium">Categoría</label>
                <select
                    id="producto-categoria"
                    required
                    class="w-full p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
                >
                    <option value="">Seleccione una categoría</option>
                </select>
            </div>

            <div class="flex justify-end">
                <button
                    type="submit"
                    class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700"
                >
                    Guardar
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Modal de confirmación de eliminación -->
<div
    id="modal-eliminar"
    class="hidden fixed inset-0 flex items-center justify-center bg-black/40 backdrop-blur-sm z-50"
>
    <div
        class="bg-white dark:bg-neutral-900 p-6 rounded-2xl shadow-xl w-full max-w-sm relative"
    >
        <h2 class="text-lg font-bold mb-4 text-gray-800 dark:text-white">
            Confirmar eliminación
        </h2>
        <p class="mb-6 text-gray-600 dark:text-gray-300">
            ¿Estás seguro de que deseas eliminar este producto?
        </p>
        <div class="flex justify-end gap-3">
            <button
                id="cancelar-eliminar"
                class="px-4 py-2 bg-gray-400 text-white rounded-lg hover:bg-gray-500"
            >
                Cancelar
            </button>
            <button
                id="confirmar-eliminar"
                class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700"
            >
                Eliminar
            </button>
        </div>
    </div>
</div>

<script is:inline>
    const lista = document.getElementById("productos-lista");
    const listaMovil = document.getElementById("productos-lista-movil");
    const modal = document.getElementById("modal-producto");
    const btnNuevo = document.getElementById("btn-nuevo");
    const btnCerrar = document.getElementById("cerrar-modal");
    const form = document.getElementById("form-producto");

    const modalEliminar = document.getElementById("modal-eliminar");
    const btnCancelarEliminar = document.getElementById("cancelar-eliminar");
    const btnConfirmarEliminar = document.getElementById("confirmar-eliminar");
    let productoAEliminar = null;

    const idInput = document.getElementById("producto-id");
    const codigoInput = document.getElementById("producto-codigo");
    const nombreInput = document.getElementById("producto-nombre");
    const compraInput = document.getElementById("producto-precio-compra");
    const ventaInput = document.getElementById("producto-precio-venta");
    const stockActualInput = document.getElementById("producto-stock-actual");
    const stockMinimoInput = document.getElementById("producto-stock-minimo");
    const unidadInput = document.getElementById("producto-unidad");
    const categoriaSelect = document.getElementById("producto-categoria");

    let productos = [];
    let categorias = [];

    async function cargarProductos() {
        const res = await fetch("http://127.0.0.1:8000/productos/");
        productos = await res.json();
        mostrarProductos();
    }

    async function cargarCategorias() {
        const res = await fetch("http://127.0.0.1:8000/categorias/");
        categorias = await res.json();
        categoriaSelect.innerHTML =
            '<option value="">Seleccione una categoría</option>';
        categorias.forEach((cat) => {
            const option = document.createElement("option");
            option.value = cat.id;
            option.textContent = cat.nombre;
            categoriaSelect.appendChild(option);
        });
    }

    function mostrarProductos() {
        lista.innerHTML = "";
        listaMovil.innerHTML = "";

        productos.forEach((p) => {
            // --- Vista Desktop (tabla) ---
            const row = document.createElement("tr");
            row.className = "hover:bg-gray-50 dark:hover:bg-neutral-800";
            row.innerHTML = `
                <td class="px-4 py-3">${p.id}</td>
                <td class="px-4 py-3">${p.codigo_barras || "-"}</td>
                <td class="px-4 py-3 font-semibold">${p.nombre}</td>
                <td class="px-4 py-3">${p.categoria ? p.categoria.nombre : "-"}</td>
                <td class="px-4 py-3">S/ ${p.precio_compra}</td>
                <td class="px-4 py-3">S/ ${p.precio_venta}</td>
                <td class="px-4 py-3">${p.stock_actual} (min: ${p.stock_minimo})</td>
                <td class="px-4 py-3">${p.unidad_medida}</td>
                <td class="px-4 py-3 text-center">
                    <button data-id="${p.id}" class="btn-editar px-2 py-1 bg-green-500 text-white text-xs rounded-lg hover:bg-green-600">Editar</button>
                    <button data-id="${p.id}" class="btn-eliminar px-2 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600">Eliminar</button>
                </td>
            `;
            lista.appendChild(row);

            // --- Vista Móvil (tarjeta) ---
            const card = document.createElement("div");
            card.className =
                "p-4 border rounded-lg shadow-sm bg-white dark:bg-neutral-800 dark:border-neutral-700";
            card.innerHTML = `
                <div class="flex justify-between items-center mb-2">
                    <h3 class="font-semibold text-gray-800 dark:text-white">${p.nombre}</h3>
                    <span class="text-xs text-gray-500">#${p.id}</span>
                </div>
                <p class="text-sm text-gray-600 dark:text-gray-300">Código: ${p.codigo_barras || "-"}</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Categoría: ${p.categoria ? p.categoria.nombre : "-"}</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Compra: S/ ${p.precio_compra} | Venta: S/ ${p.precio_venta}</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Stock: ${p.stock_actual} (min: ${p.stock_minimo})</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Unidad: ${p.unidad_medida}</p>
                <div class="mt-3 flex gap-2">
                    <button data-id="${p.id}" class="btn-editar px-3 py-1 bg-green-500 text-white text-xs rounded-lg hover:bg-green-600">Editar</button>
                    <button data-id="${p.id}" class="btn-eliminar px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600">Eliminar</button>
                </div>
            `;
            listaMovil.appendChild(card);
        });

        // Eventos
        document.querySelectorAll(".btn-editar").forEach((btn) => {
            btn.addEventListener("click", (e) =>
                editarProducto(e.target.dataset.id),
            );
        });
        document.querySelectorAll(".btn-eliminar").forEach((btn) => {
            btn.addEventListener("click", (e) => {
                productoAEliminar = e.target.dataset.id;
                modalEliminar.classList.remove("hidden");
            });
        });
    }

    function editarProducto(id) {
        const p = productos.find((x) => x.id == id);
        if (!p) return;
        idInput.value = p.id;
        codigoInput.value = p.codigo_barras || "";
        nombreInput.value = p.nombre;
        compraInput.value = p.precio_compra;
        ventaInput.value = p.precio_venta;
        stockActualInput.value = p.stock_actual;
        stockMinimoInput.value = p.stock_minimo;
        unidadInput.value = p.unidad_medida;
        categoriaSelect.value = p.categoria_id;
        modal.classList.remove("hidden");
    }

    btnNuevo.addEventListener("click", () => {
        form.reset();
        idInput.value = "";
        modal.classList.remove("hidden");
    });

    btnCerrar.addEventListener("click", () => modal.classList.add("hidden"));

    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const data = {
            codigo_barras: codigoInput.value || null,
            nombre: nombreInput.value,
            precio_compra: parseFloat(compraInput.value),
            precio_venta: parseFloat(ventaInput.value),
            stock_actual: parseInt(stockActualInput.value),
            stock_minimo: parseInt(stockMinimoInput.value),
            unidad_medida: unidadInput.value,
            categoria_id: parseInt(categoriaSelect.value),
        };

        if (idInput.value) {
            await fetch(`http://127.0.0.1:8000/productos/${idInput.value}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data),
            });
        } else {
            await fetch("http://127.0.0.1:8000/productos/", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data),
            });
        }

        modal.classList.add("hidden");
        cargarProductos();
    });

    btnCancelarEliminar.addEventListener("click", () => {
        productoAEliminar = null;
        modalEliminar.classList.add("hidden");
    });

    btnConfirmarEliminar.addEventListener("click", async () => {
        if (productoAEliminar) {
            await fetch(
                `http://127.0.0.1:8000/productos/${productoAEliminar}`,
                {
                    method: "DELETE",
                },
            );
            productoAEliminar = null;
            modalEliminar.classList.add("hidden");
            cargarProductos();
        }
    });

    cargarCategorias();
    cargarProductos();
</script>