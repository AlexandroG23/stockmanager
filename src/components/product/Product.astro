---
import { Icon } from "astro-icon/components";
import ModalFormulario from "./ModalFormulario.astro";
import ModalConfirm from "./ModalConfirm.astro";
---

<div class="w-full max-w-7xl mx-auto p-6">
    <!-- Encabezado -->
    <div
        class="flex flex-col lg:flex-row justify-between lg:items-center gap-4 mb-6"
    >
        <h1 class="text-2xl font-bold text-gray-800 dark:text-white">
            Productos
        </h1>
        <div class="flex flex-col sm:flex-row gap-2 w-full lg:w-auto relative">
            <!-- 🔍 Buscador -->
            <Icon name="form/carrot" size={18} class="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 dark:text-orange-400" />
            <input
                type="text"
                id="buscador-productos"
                placeholder="Buscar productos"
                class="flex-1 pl-10 sm:w-64 p-2 border rounded-lg dark:bg-neutral-800 dark:text-white"
            />
            <button
                id="btn-nuevo"
                class="px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 flex items-center gap-2"
            >
                <Icon name="form/plusproduct" size={18} /> Nuevo producto
            </button>
        </div>
    </div>

    <!-- Tabla en desktop / tarjetas en móvil -->
    <div class="overflow-x-auto bg-white dark:bg-neutral-900 shadow rounded-lg">
        <table
            class="w-full text-sm text-left text-gray-600 dark:text-gray-300 hidden lg:table"
        >
            <thead
                class="bg-gray-100 dark:bg-neutral-800 text-gray-700 dark:text-gray-200 text-xs uppercase"
            >
                <tr>
                    <th class="px-4 py-3">ID</th>
                    <th class="px-4 py-3">Código</th>
                    <th class="px-4 py-3">Nombre</th>
                    <th class="px-4 py-3">Categoría</th>
                    <th class="px-4 py-3">Compra</th>
                    <th class="px-4 py-3">Venta</th>
                    <th class="px-4 py-3">Stock</th>
                    <th class="px-4 py-3">Unidad</th>
                    <th class="px-4 py-3 text-center">Acciones</th>
                </tr>
            </thead>
            <tbody
                id="productos-lista"
                class="divide-y divide-gray-200 dark:divide-neutral-700"
            >
                <!-- JS insertará filas -->
            </tbody>
        </table>

        <!-- Vista móvil -->
        <div
            id="productos-lista-movil"
            class="lg:hidden flex flex-col gap-4 p-4"
        >
            <!-- JS insertará tarjetas -->
        </div>
    </div>
</div>

<!-- Modal de formulario -->
<ModalFormulario />

<!-- Modal de confirmación de eliminación -->
<ModalConfirm />

<script is:inline>
    const lista = document.getElementById("productos-lista");
    const listaMovil = document.getElementById("productos-lista-movil");
    const modal = document.getElementById("modal-producto");
    const btnNuevo = document.getElementById("btn-nuevo");
    const btnCerrar = document.getElementById("cerrar-modal");
    const form = document.getElementById("form-producto");

    const modalEliminar = document.getElementById("modal-eliminar");
    const btnCancelarEliminar = document.getElementById("cancelar-eliminar");
    const btnConfirmarEliminar = document.getElementById("confirmar-eliminar");
    let productoAEliminar = null;

    const idInput = document.getElementById("producto-id");
    const codigoInput = document.getElementById("producto-codigo");
    const nombreInput = document.getElementById("producto-nombre");
    const compraInput = document.getElementById("producto-precio-compra");
    const ventaInput = document.getElementById("producto-precio-venta");
    const stockActualInput = document.getElementById("producto-stock-actual");
    const stockMinimoInput = document.getElementById("producto-stock-minimo");
    const unidadInput = document.getElementById("producto-unidad");
    const categoriaSelect = document.getElementById("producto-categoria");

    const buscador = document.getElementById("buscador-productos");

    let productos = [];
    let categorias = [];
    let productosFiltrados = [];

    async function cargarProductos() {
        const res = await fetch("http://127.0.0.1:8000/productos/");
        productos = await res.json();
        productosFiltrados = productos;
        mostrarProductos();
    }

    async function cargarCategorias() {
        const res = await fetch("http://127.0.0.1:8000/categorias/");
        categorias = await res.json();
        categoriaSelect.innerHTML =
            '<option value="">Seleccione una categoría</option>';
        categorias.forEach((cat) => {
            const option = document.createElement("option");
            option.value = cat.id;
            option.textContent = cat.nombre;
            categoriaSelect.appendChild(option);
        });
    }

    function mostrarProductos() {
        lista.innerHTML = "";
        listaMovil.innerHTML = "";

        productosFiltrados.forEach((p) => {
            // --- Vista Desktop (tabla) ---
            const row = document.createElement("tr");
            row.className = "hover:bg-gray-50 dark:hover:bg-neutral-800";
            row.innerHTML = `
                <td class="px-4 py-3">${p.id}</td>
                <td class="px-4 py-3">${p.codigo_barras || "-"}</td>
                <td class="px-4 py-3 font-semibold">${p.nombre}</td>
                <td class="px-4 py-3">${p.categoria ? p.categoria.nombre : "-"}</td>
                <td class="px-4 py-3">S/ ${p.precio_compra}</td>
                <td class="px-4 py-3">S/ ${p.precio_venta}</td>
                <td class="px-4 py-3">${p.stock_actual} (min: ${p.stock_minimo})</td>
                <td class="px-4 py-3">${p.unidad_medida}</td>
                <td class="px-4 py-3 text-center">
                    <button data-id="${p.id}" class="btn-editar px-2 py-1 bg-green-500 text-white text-xs rounded-lg hover:bg-green-600">Editar</button>
                    <button data-id="${p.id}" class="btn-eliminar px-2 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600">Eliminar</button>
                </td>
            `;
            lista.appendChild(row);

            // --- Vista Móvil (tarjeta) ---
            const card = document.createElement("div");
            card.className =
                "p-4 border rounded-lg shadow-sm bg-white dark:bg-neutral-800 dark:border-neutral-700";
            card.innerHTML = `
                <div class="flex justify-between items-center mb-2">
                    <h3 class="font-semibold text-gray-800 dark:text-white">${p.nombre}</h3>
                    <span class="text-xs text-gray-500">#${p.id}</span>
                </div>
                <p class="text-sm text-gray-600 dark:text-gray-300">Código: ${p.codigo_barras || "-"}</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Categoría: ${p.categoria ? p.categoria.nombre : "-"}</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Compra: S/ ${p.precio_compra} | Venta: S/ ${p.precio_venta}</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Stock: ${p.stock_actual} (min: ${p.stock_minimo})</p>
                <p class="text-sm text-gray-600 dark:text-gray-300">Unidad: ${p.unidad_medida}</p>
                <div class="mt-3 flex gap-2">
                    <button data-id="${p.id}" class="btn-editar px-3 py-1 bg-green-500 text-white text-xs rounded-lg hover:bg-green-600">Editar</button>
                    <button data-id="${p.id}" class="btn-eliminar px-3 py-1 bg-red-500 text-white text-xs rounded-lg hover:bg-red-600">Eliminar</button>
                </div>
            `;
            listaMovil.appendChild(card);
        });

        // Eventos
        document.querySelectorAll(".btn-editar").forEach((btn) => {
            btn.addEventListener("click", (e) =>
                editarProducto(e.target.dataset.id),
            );
        });
        document.querySelectorAll(".btn-eliminar").forEach((btn) => {
            btn.addEventListener("click", (e) => {
                productoAEliminar = e.target.dataset.id;
                abrirModal(modalEliminar);
            });
        });
    }

    function abrirModal(modal) {
        modal.classList.remove("hidden");
        modal.classList.add("flex");
    }

    function cerrarModal(modal) {
        modal.classList.remove("flex");
        modal.classList.add("hidden");
    }

    function editarProducto(id) {
        const p = productos.find((x) => x.id == id);
        if (!p) return;
        idInput.value = p.id;
        codigoInput.value = p.codigo_barras || "";
        nombreInput.value = p.nombre;
        compraInput.value = p.precio_compra;
        ventaInput.value = p.precio_venta;
        stockActualInput.value = p.stock_actual;
        stockMinimoInput.value = p.stock_minimo;
        unidadInput.value = p.unidad_medida;
        categoriaSelect.value = p.categoria_id;
        abrirModal(modal);
    }

    btnNuevo.addEventListener("click", () => {
        form.reset();
        idInput.value = "";
        abrirModal(modal);
    });

    btnCerrar.addEventListener("click", () => cerrarModal(modal));

    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const data = {
            codigo_barras: codigoInput.value || null,
            nombre: nombreInput.value,
            precio_compra: parseFloat(compraInput.value),
            precio_venta: parseFloat(ventaInput.value),
            stock_actual: parseInt(stockActualInput.value),
            stock_minimo: parseInt(stockMinimoInput.value),
            unidad_medida: unidadInput.value,
            categoria_id: parseInt(categoriaSelect.value),
        };

        if (idInput.value) {
            await fetch(`http://127.0.0.1:8000/productos/${idInput.value}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data),
            });
        } else {
            await fetch("http://127.0.0.1:8000/productos/", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data),
            });
        }

        cerrarModal(modal);
        cargarProductos();
    });

    btnCancelarEliminar.addEventListener("click", () => {
        productoAEliminar = null;
        cerrarModal(modalEliminar);
    });

    btnConfirmarEliminar.addEventListener("click", async () => {
        if (productoAEliminar) {
            await fetch(
                `http://127.0.0.1:8000/productos/${productoAEliminar}`,
                {
                    method: "DELETE",
                },
            );
            productoAEliminar = null;
            cerrarModal(modalEliminar);
            cargarProductos();
        }
    });

    // 🔍 Buscador
    buscador.addEventListener("input", (e) => {
        const term = e.target.value.toLowerCase();
        productosFiltrados = productos.filter(
            (p) =>
                p.nombre.toLowerCase().includes(term) ||
                (p.codigo_barras &&
                    p.codigo_barras.toLowerCase().includes(term)) ||
                (p.categoria?.nombre &&
                    p.categoria.nombre.toLowerCase().includes(term)),
        );
        mostrarProductos();
    });

    cargarCategorias();
    cargarProductos();
</script>