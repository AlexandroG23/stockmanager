---
import { Icon } from "astro-icon/components";
---

<div class="w-full max-w-7xl mx-auto p-6">
    <!-- Encabezado -->
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800 dark:text-white">
            Movimientos de Inventario
        </h1>
    </div>

    <!-- Filtros -->
    <div class="mb-4 flex flex-col lg:flex-row gap-4 items-center">
        <div class="relative">
            <Icon
                name="form/book"
                size={18}
                class="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 dark:text-green-400"
            />
            <input
                id="buscar-movimiento"
                type="text"
                placeholder="Buscar por producto o tipo..."
                class="w-full pl-10 p-2 border rounded-lg dark:bg-neutral-800 dark:text-white dark:border-neutral-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
        </div>
        <div class="flex gap-2">
            <input
                type="date"
                id="fecha-inicio"
                class="p-2 border rounded-lg dark:bg-neutral-800 dark:text-white dark:border-neutral-700"
            />
            <input
                type="date"
                id="fecha-fin"
                class="p-2 border rounded-lg dark:bg-neutral-800 dark:text-white dark:border-neutral-700"
            />
            <select
                id="tipo-movimiento"
                class="p-2 border rounded-lg dark:bg-neutral-800 dark:text-white dark:border-neutral-700"
            >
                <option value="">Todos</option>
                <option value="entrada">Entrada</option>
                <option value="salida">Salida</option>
            </select>
            <button
                id="btn-filtrar"
                class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
                >Filtrar</button
            >
        </div>
    </div>

    <!-- Tabla desktop / tarjetas mÃ³vil -->
    <div class="overflow-x-auto bg-white dark:bg-neutral-900 shadow rounded-lg">
        <table
            class="w-full text-sm text-left text-gray-600 dark:text-gray-300 hidden lg:table"
        >
            <thead
                class="bg-gray-100 dark:bg-neutral-800 text-gray-700 dark:text-gray-200 text-xs uppercase"
            >
                <tr>
                    <th class="px-4 py-3">ID</th>
                    <th class="px-4 py-3">Producto</th>
                    <th class="px-4 py-3">Tipo</th>
                    <th class="px-4 py-3">Cantidad</th>
                    <th class="px-4 py-3">Fecha</th>
                </tr>
            </thead>
            <tbody
                id="movimientos-lista"
                class="divide-y divide-gray-200 dark:divide-neutral-700"
            ></tbody>
        </table>

        <div
            id="movimientos-lista-movil"
            class="lg:hidden flex flex-col gap-4 p-4"
        >
        </div>
    </div>
</div>

<script is:inline>
    const lista = document.getElementById("movimientos-lista");
    const listaMovil = document.getElementById("movimientos-lista-movil");
    const buscador = document.getElementById("buscar-movimiento");
    const fechaInicio = document.getElementById("fecha-inicio");
    const fechaFin = document.getElementById("fecha-fin");
    const tipoMovimiento = document.getElementById("tipo-movimiento");
    const btnFiltrar = document.getElementById("btn-filtrar");

    let movimientos = [];
    let movimientosFiltrados = [];

    async function cargarMovimientos() {
        const res = await fetch("http://127.0.0.1:8000/movimientos/");
        movimientos = await res.json();
        procesarFechas(movimientos);
        movimientosFiltrados = movimientos;
        mostrarMovimientos(movimientosFiltrados);
    }

    function procesarFechas(data) {
        data.forEach((m) => {
            const utcDate = new Date(m.fecha + "Z");
            m.fechaFormateada = utcDate.toLocaleString("es-PE", {
                timeZone: "America/Lima",
                day: "2-digit",
                month: "2-digit",
                year: "numeric",
                hour: "2-digit",
                minute: "2-digit",
                second: "2-digit",
                hour12: true,
            });
        });
    }

    function mostrarMovimientos(data) {
        lista.innerHTML = "";
        listaMovil.innerHTML = "";

        data.forEach((m) => {
            const row = document.createElement("tr");
            row.className = "hover:bg-gray-50 dark:hover:bg-neutral-800";
            row.innerHTML = `
      <td class="px-4 py-3">${m.id}</td>
      <td class="px-4 py-3 font-semibold">${m.producto?.nombre || "N/A"}</td>
      <td class="px-4 py-3">${m.tipo}</td>
      <td class="px-4 py-3">${m.cantidad}</td>
      <td class="px-4 py-3">${m.fechaFormateada}</td>
    `;
            lista.appendChild(row);

            const card = document.createElement("div");
            card.className =
                "p-4 border rounded-lg shadow-sm bg-white dark:bg-neutral-800 dark:border-neutral-700";
            card.innerHTML = `
      <div class="flex justify-between items-center mb-2">
        <h3 class="font-semibold text-gray-800 dark:text-white">${m.producto?.nombre || "N/A"}</h3>
        <span class="text-xs text-gray-500">#${m.id}</span>
      </div>
      <p class="text-sm text-gray-600 dark:text-gray-300">Tipo: ${m.tipo}</p>
      <p class="text-sm text-gray-600 dark:text-gray-300">Cantidad: ${m.cantidad}</p>
      <p class="text-sm text-gray-600 dark:text-gray-300">Fecha: ${m.fechaFormateada}</p>
    `;
            listaMovil.appendChild(card);
        });
    }

    // Buscador en tiempo real
    buscador.addEventListener("input", (e) => {
        filtrarMovimientos();
    });

    btnFiltrar.addEventListener("click", () => {
        filtrarMovimientos();
    });

    function filtrarMovimientos() {
        let q = buscador.value.toLowerCase();
        let inicio = fechaInicio.value;
        let fin = fechaFin.value;
        let tipo = tipoMovimiento.value;

        movimientosFiltrados = movimientos.filter((m) => {
            let coincideTexto =
                m.producto?.nombre?.toLowerCase().includes(q) ||
                m.tipo.toLowerCase().includes(q);
            let coincideTipo = tipo ? m.tipo === tipo : true;
            let coincideFecha = true;

            if (inicio) {
                coincideFecha =
                    coincideFecha &&
                    new Date(m.fecha).toISOString().slice(0, 10) >= inicio;
            }
            if (fin) {
                coincideFecha =
                    coincideFecha &&
                    new Date(m.fecha).toISOString().slice(0, 10) <= fin;
            }

            return coincideTexto && coincideTipo && coincideFecha;
        });

        mostrarMovimientos(movimientosFiltrados);
    }

    cargarMovimientos();
</script>